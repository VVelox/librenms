#!/bin/sh
# (c) 2013-2017, f0o@devilcode.org, olb@nebkha.net
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

DISTRO_BIN="/usr/bin/distro"
BASE='.1.3.6.1.2.1.31.1.1.1.18'
GET_TYPE="$1"
GET_OID="$2"

# cache ip link output
if [ "$(/usr/bin/uname)" = 'Linux' ]; then
    IP_LINK="$(ip link)"
fi

# Get interface id from GET_OID script parameter depending on the get type -g
# or -n.
#
# snmpd specify two behaviors: GETNEXT and GET.
#
# script -g  <GET_OID>
#
# :    Should return OID value
#
# script -n <GET_OID>
#
# :    Should return next OID value
#
#      Note that interface id are not necessarly following incrementally.
#      We need tho find the next interface id (which is not necessarily n+1).
#
interface_id()
{
    local N=
    local L=
    local ID="${GET_OID#${BASE}.}"

    case "$GET_TYPE" in
        -g)
            echo "$ID"
            return 0
            ;;
        -n)
            if [ "$ID" = "$BASE" ]
            then
                if [ "$(/usr/bin/uname)" = 'Linux' ]; then
                    # find the first iface_id
                    echo "$IP_LINK" | grep -oE "^[0-9]+:" | head -n 1 | cut -d':' -f 1
                    return 0
                else
                    ifconfig| head -n 1 | cut -d: -f 1
                    return 0
                fi
            else
                # find the next iface_id
                if [ "$(/usr/bin/uname)" = 'Linux' ]; then
                    for N in $(echo "$IP_LINK" | grep -oE "^[0-9]+:" | cut -d':' -f 1)
                    do
                        if [ "$L" = "$ID" -o ! "$ID" ]
                        then
                            echo -n "$N"
                            return 0
                        fi
                        L="$N"
                    done
                else
                    for N in $(ifconfig | grep -E '^[A-Za-z]+' | cut -d: -f1 | cat -n -b | sed 's/^  *//' | sed 's/[\t\ ].*//'); do
                        if [ "$L" = "$ID" -o ! "$ID" ]
                        then
                            echo -n "$N"
                            return 0
                        fi
                        L="$N"
                    done
                fi
            fi
            ;;
    esac
    return 1
}

interface_name()
{
    if [ "$(/usr/bin/uname)" = 'Linux' ]; then
        local IFACE_ID="$1"
        echo "$IP_LINK" | grep -oE "^${IFACE_ID}: [^:@ ]*" | cut -d " " -f 2
    else
        ifconfig | grep -E '^[A-Za-z]+' | cut -d: -f1 | head -n "$1" | tail -n 1
    fi
}

alias_from_interfaces_config_file()
{
    local IFACE="$1"
    local CONFIG_FILE=

    if [ -x "$DISTRO_BIN" ]
    then
        if [ "$(/usr/bin/uname)" = 'Linux' ]; then
            DISTRO_VAR="$($DISTRO_BIN | cut -d " " -f 1)"
        else
            DISTRO_VAR="$(/usr/bin/uname)"
        fi

        case "${DISTRO_VAR}" in
            Debian)
                CONFIG_FILE="/etc/network/interfaces"
            ;;
            Ubuntu)
                CONFIG_FILE="/etc/network/interfaces"
            ;;
            Gentoo)
                CONFIG_FILE="/etc/conf.d/net"
            ;;
            CentOS|RedHat|SuSE|Mandriva|Mandrake)
                CONFIG_FILE="/etc/sysconfig/network-scripts/ifcfg-$IFACE"
            ;;
            Archlinux)
                CONFIG_FILE="/etc/conf.d/net-conf-$IFACE"
            ;;
            FreeBSD)
                CONFIG_FILE="/etc/rc.conf"
            ;;
        esac
    fi
    if [ "$CONFIG_FILE" ]
    then
         echo "$(grep -i "^# $IFACE:" $CONFIG_FILE | sed "s/^# $IFACE: //i")"
    fi
}

alias_from_ip_link()
{   
    case $(/usr/bin/uname) in
        Linux)
            local IFACE="$1"
            ip link show "$IFACE" | grep -e "^[[:space:]]*alias[[:space:]]" | sed -e 's/^[[:space:]]*alias //'
            ;;
        FreeBSD)
            COUNT=$(/sbin/ifconfig "$1" | grep 'description:' | head -n 1 | cut -d: -f 2- | wc -l)
            if [ ${COUNT} -eq 1 ]; then
                /sbin/ifconfig "$1" | grep 'description:' | head -n 1 | cut -d: -f 2- | sed 's/^ //'
           else
               echo "$1"
           fi
           ;;
        *) echo "$1" ;;
    esac
}

IFACE_ID="$(interface_id)"
[ "$IFACE_ID" ] || exit

IFACE="$(interface_name "$IFACE_ID")"

VALUE=
# we first try to get alias from interface config file
[ "$VALUE" ] || VALUE="$(alias_from_interfaces_config_file "$IFACE")"
# then from ip link show $IFACE output
[ "$VALUE" ] || VALUE="$(alias_from_ip_link "$IFACE")"

echo "${BASE}.${IFACE_ID}"
echo "string"
echo "$VALUE"
exit 0
